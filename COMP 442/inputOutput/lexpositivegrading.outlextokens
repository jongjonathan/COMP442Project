[DOUBLEEQUAL, ==, 1] [ADD, +, 1] [OR, or, 1] [OPENBRACKET, (, 1] [SEMICOLON, ;, 1] [ID, integerwhilelocalvar, 1]
[ANGLEBRACKETS, <>, 2] [SUBTRACT, -, 2] [AND, and, 2] [CLOSEDBRACKET, ), 2] [COMMA, ,, 2] [ID, floatif, 2] [CONSTRUCTORKEYWORD, constructor, 2]
[LESSTHAN, <, 3] [ID, 	, 3] [MULTIPLY, *, 3] [NOT, not, 3] [CURLYOPENBRACKET, {, 3] [FLOAT, ., 3] [ID, 	voidthenattribute, 3]
[GREATERTHAN, >, 4] [ID, 	, 4] [DIVIDE, /, 4] [ID, 	, 4] [CURLYCLOSEDBRACKET, }, 4] [COLON, :, 4] [ID, 	classelsefunction, 4]
[LESSTHANEQUAL, <=, 5] [EQUAL, =, 5] [ID, 	, 5] [SQUAREOPENBRACKET, [, 5] [LAMDAEXPRESSION, =>, 5] [ID, selfreadpublic, 5]
[GREATERTHANEQUAL, =>, 6] [SQUARECLOSEDBRACKET, ], 6] [DOUBLECOLON, ::, 6] [ID, isawriteprivate, 6]
[RETURNKEYWORD, return, 7]
[INTEGER, 0, 9]
[INTEGER, 1, 10]
[INTEGER, 10, 11]
[INTEGER, 12, 12]
[INTEGER, 123, 13]
[INTEGER, 12345, 14]
[FLOAT, 1.23, 16] [ID, 	, 16]
[FLOAT, 12.34, 17] [ID, 	, 17]
[FLOAT, 120.34e10, 18] [ID, 	, 18]
[FLOAT, 12345.6789e-123, 19] [ID, 	, 19]
[ID, abc, 21]
[ID, abc1, 22]
[ID, a1bc, 23]
[ID, abc_1abc, 24]
[ID, abc1_abc, 25]
[INLINECOMMENT, // this is an inline comment, 27]
[BLOCKCOMMENT, /* this is a single line block comment */, 29]
[BLOCKCOMMENT, /* this is a \nmultiple line\nblock comment \n*/, 31]
[BLOCKCOMMENT, /* this is an imbricated \n/* block comment\n*/, 36]
[MULTIPLY, *, 39] [DIVIDE, /, 39] [ID, , 39]