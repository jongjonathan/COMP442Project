[FUNCTIONKEYWORD, function, 2]
[ID, main, 2] [OPENBRACKET, (, 2] [CLOSEDBRACKET, ), 2] [LAMDAEXPRESSION, =>, 2] [VOIDKEYWORD, void, 2]
[CURLYOPENBRACKET, {, 3]
[LOCALVARKEYWORD, localvar, 4] [ID, p, 4] [COLON, :, 4] [INTEGERKEYWORD, integer, 4] [SEMICOLON, ;, 4]
[LOCALVARKEYWORD, localvar, 5] [ID, n, 5] [COLON, :, 5] [INTEGERKEYWORD, integer, 5] [SEMICOLON, ;, 5]
[ID, p, 7] [EQUAL, =, 7] [INTEGER, 4, 7] [SEMICOLON, ;, 7]
[ID, n, 8] [EQUAL, =, 8] [INTEGER, 5, 8] [SEMICOLON, ;, 8]
[IFKEYWORD, if, 9] [OPENBRACKET, (, 9] [ID, p, 9] [GREATERTHAN, >, 9] [ID, n, 9] [CLOSEDBRACKET, ), 9]
[THENKEYWORD, then, 10] [CURLYOPENBRACKET, {, 10]
[WRITEKEYWORD, write, 11] [OPENBRACKET, (, 11] [ID, p, 11] [CLOSEDBRACKET, ), 11] [SEMICOLON, ;, 11]
[CURLYCLOSEDBRACKET, }, 12] [ELSEKEYWORD, else, 12] [SEMICOLON, ;, 12]
[WRITEKEYWORD, write, 13] [OPENBRACKET, (, 13] [ID, n, 13] [CLOSEDBRACKET, ), 13] [SEMICOLON, ;, 13]
[CURLYCLOSEDBRACKET, }, 14]
[EOF, eof, 15]