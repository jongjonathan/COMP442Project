[FUNCTIONKEYWORD, function, 1] [ID, main, 1] [OPENBRACKET, (, 1] [CLOSEDBRACKET, ), 1] [LAMDAEXPRESSION, =>, 1] [VOIDKEYWORD, void, 1]
[CURLYOPENBRACKET, {, 2]
[LOCALVARKEYWORD, localvar, 3] [ID, arr, 3] [COLON, :, 3] [INTEGERKEYWORD, integer, 3] [SQUAREOPENBRACKET, [, 3] [INTEGER, 6, 3] [SQUARECLOSEDBRACKET, ], 3] [SEMICOLON, ;, 3]
[LOCALVARKEYWORD, localvar, 4] [ID, arrID, 4] [COLON, :, 4] [ID, id, 4] [SQUAREOPENBRACKET, [, 4] [INTEGER, 8, 4] [SQUARECLOSEDBRACKET, ], 4] [SEMICOLON, ;, 4]
[LOCALVARKEYWORD, localvar, 5] [ID, arrFloat, 5] [COLON, :, 5] [FLOATKEYWORD, float, 5] [SQUAREOPENBRACKET, [, 5] [INTEGER, 2, 5] [SQUARECLOSEDBRACKET, ], 5] [SEMICOLON, ;, 5]
[LOCALVARKEYWORD, localvar, 6] [ID, p, 6] [COLON, :, 6] [FLOATKEYWORD, float, 6] [SEMICOLON, ;, 6]
[LOCALVARKEYWORD, localvar, 7] [ID, n, 7] [COLON, :, 7] [INTEGERKEYWORD, integer, 7] [SEMICOLON, ;, 7]
[LOCALVARKEYWORD, localvar, 8] [ID, k, 8] [COLON, :, 8] [INTEGERKEYWORD, integer, 8] [SEMICOLON, ;, 8]
[LOCALVARKEYWORD, localvar, 9] [ID, i, 9] [COLON, :, 9] [INTEGERKEYWORD, integer, 9] [SEMICOLON, ;, 9]
[LOCALVARKEYWORD, localvar, 10] [ID, d, 10] [COLON, :, 10] [INTEGERKEYWORD, integer, 10] [SEMICOLON, ;, 10]
[ID, arr, 11] [SQUAREOPENBRACKET, [, 11] [INTEGER, 0, 11] [SQUARECLOSEDBRACKET, ], 11] [EQUAL, =, 11] [INTEGER, 6, 11] [SEMICOLON, ;, 11]
[ID, k, 12] [EQUAL, =, 12] [INTEGER, 5, 12] [SEMICOLON, ;, 12]
[ID, n, 13] [EQUAL, =, 13] [INTEGER, 10, 13] [SEMICOLON, ;, 13]
[ID, i, 14] [EQUAL, =, 14] [ID, k, 14] [ADD, +, 14] [ID, n, 14] [SEMICOLON, ;, 14]
[ID, d, 15] [EQUAL, =, 15] [ID, k, 15] [MULTIPLY, *, 15] [ID, n, 15] [SEMICOLON, ;, 15]
[WRITEKEYWORD, write, 16] [OPENBRACKET, (, 16] [ID, k, 16] [CLOSEDBRACKET, ), 16] [SEMICOLON, ;, 16]
[WRITEKEYWORD, write, 17] [OPENBRACKET, (, 17] [ID, i, 17] [CLOSEDBRACKET, ), 17] [SEMICOLON, ;, 17]
[WRITEKEYWORD, write, 18] [OPENBRACKET, (, 18] [ID, d, 18] [CLOSEDBRACKET, ), 18] [SEMICOLON, ;, 18]
[CURLYCLOSEDBRACKET, }, 19]
[EOF, eof, 20]