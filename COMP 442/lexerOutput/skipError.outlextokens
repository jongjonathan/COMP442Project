[FUNCTIONKEYWORD, function, 1] [ID, main, 1] [OPENBRACKET, (, 1] [CLOSEDBRACKET, ), 1] [LAMDAEXPRESSION, =>, 1] [VOIDKEYWORD, void, 1]
[CURLYOPENBRACKET, {, 2]
[LOCALVARKEYWORD, localvar, 3] [invalidchar, #, 3] [ID, p, 3] [invalidchar, @, 3] [COLON, :, 3] [FLOATKEYWORD, float, 3] [FUNCTIONKEYWORD, function, 3] [ID, hello, 3] [SEMICOLON, ;, 3]
[LOCALVARKEYWORD, localvar, 4] [ID, n, 4] [COLON, :, 4] [INTEGERKEYWORD, integer, 4] [SEMICOLON, ;, 4]
[LOCALVARKEYWORD, localvar, 5] [ID, extraExtra, 5] [COLON, :, 5] [INTEGERKEYWORD, integer, 5] [SEMICOLON, ;, 5] [SEMICOLON, ;, 5]
[LOCALVARKEYWORD, localvar, 7] [ID, i, 7] [COLON, :, 7] [INTEGERKEYWORD, integer, 7] [SEMICOLON, ;, 7]
[LOCALVARKEYWORD, localvar, 8] [ID, j, 8] [COLON, :, 8] [INTEGERKEYWORD, integer, 8] [SEMICOLON, ;, 8]
[LOCALVARKEYWORD, localvar, 9] [ID, arr, 9] [COLON, :, 9] [INTEGERKEYWORD, integer, 9] [SQUAREOPENBRACKET, [, 9] [INTEGER, 7, 9] [SQUARECLOSEDBRACKET, ], 9] [SEMICOLON, ;, 9]
[ID, arr, 10] [SQUAREOPENBRACKET, [, 10] [INTEGER, 0, 10] [SQUARECLOSEDBRACKET, ], 10] [EQUAL, =, 10] [INTEGER, 64, 10] [SEMICOLON, ;, 10]
[ID, arr, 11] [SQUAREOPENBRACKET, [, 11] [INTEGER, 1, 11] [SQUARECLOSEDBRACKET, ], 11] [EQUAL, =, 11] [INTEGER, 34, 11] [SEMICOLON, ;, 11]
[ID, arr, 12] [SQUAREOPENBRACKET, [, 12] [INTEGER, 2, 12] [SQUARECLOSEDBRACKET, ], 12] [EQUAL, =, 12] [INTEGER, 25, 12] [SEMICOLON, ;, 12]
[ID, arr, 13] [SQUAREOPENBRACKET, [, 13] [INTEGER, 3, 13] [SQUARECLOSEDBRACKET, ], 13] [EQUAL, =, 13] [INTEGER, 12, 13] [SEMICOLON, ;, 13]
[ID, arr, 14] [SQUAREOPENBRACKET, [, 14] [INTEGER, 4, 14] [SQUARECLOSEDBRACKET, ], 14] [EQUAL, =, 14] [INTEGER, 22, 14] [SEMICOLON, ;, 14]
[ID, arr, 15] [SQUAREOPENBRACKET, [, 15] [INTEGER, 5, 15] [SQUARECLOSEDBRACKET, ], 15] [EQUAL, =, 15] [INTEGER, 11, 15] [SEMICOLON, ;, 15]
[ID, arr, 16] [SQUAREOPENBRACKET, [, 16] [INTEGER, 6, 16] [SQUARECLOSEDBRACKET, ], 16] [EQUAL, =, 16] [INTEGER, 90, 16] [SEMICOLON, ;, 16]
[CURLYCLOSEDBRACKET, }, 18] [EOF, eof, 18]