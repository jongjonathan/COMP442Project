[CLASSKEYWORD, class, 1] [ID, SHAPE, 1] [CURLYOPENBRACKET, {, 1]
[PUBLICKEYWORD, public, 2] [ATTRIBUTEKEYWORD, attribute, 2] [ID, a, 2] [COLON, :, 2] [INTEGERKEYWORD, integer, 2] [SEMICOLON, ;, 2] [INLINECOMMENT, //public data member, 2]
[PRIVATEKEYWORD, private, 3] [ATTRIBUTEKEYWORD, attribute, 3] [ID, b, 3] [COLON, :, 3] [FLOATKEYWORD, float, 3] [SEMICOLON, ;, 3] [INLINECOMMENT, //private data member, 3]
[PRIVATEKEYWORD, private, 4] [ATTRIBUTEKEYWORD, attribute, 4] [ID, c, 4] [COLON, :, 4] [ID, id, 4] [SEMICOLON, ;, 4] [INLINECOMMENT, //public data member, 4]
[PUBLICKEYWORD, public, 5] [ATTRIBUTEKEYWORD, attribute, 5] [ID, d, 5] [COLON, :, 5] [INTEGERKEYWORD, integer, 5] [SEMICOLON, ;, 5]
[CURLYCLOSEDBRACKET, }, 6] [SEMICOLON, ;, 6]
[CLASSKEYWORD, class, 7] [ID, SQUARE, 7] [ISAKEYWORD, isa, 7] [ID, SHAPE, 7] [CURLYOPENBRACKET, {, 7]
[PUBLICKEYWORD, public, 8] [ATTRIBUTEKEYWORD, attribute, 8] [ID, a, 8] [COLON, :, 8] [INTEGERKEYWORD, integer, 8] [SEMICOLON, ;, 8] [INLINECOMMENT, //public data member, 8]
[PRIVATEKEYWORD, private, 9] [ATTRIBUTEKEYWORD, attribute, 9] [ID, b, 9] [COLON, :, 9] [FLOATKEYWORD, float, 9] [SEMICOLON, ;, 9] [INLINECOMMENT, //private data member, 9]
[PRIVATEKEYWORD, private, 10] [ATTRIBUTEKEYWORD, attribute, 10] [ID, c, 10] [COLON, :, 10] [ID, id, 10] [SEMICOLON, ;, 10] [INLINECOMMENT, //public data member, 10]
[PUBLICKEYWORD, public, 12] [FUNCTIONKEYWORD, function, 12] [ID, evaluate, 12] [COLON, :, 12] [OPENBRACKET, (, 12] [ID, x, 12] [COLON, :, 12] [FLOATKEYWORD, float, 12] [CLOSEDBRACKET, ), 12] [LAMDAEXPRESSION, =>, 12] [FLOATKEYWORD, float, 12] [SEMICOLON, ;, 12] [INLINECOMMENT, //member func, 12]
[CURLYCLOSEDBRACKET, }, 13] [SEMICOLON, ;, 13]
[FUNCTIONKEYWORD, function, 15] [ID, LINEAR, 15] [DOUBLECOLON, ::, 15] [ID, evaluate, 15] [OPENBRACKET, (, 15] [ID, x, 15] [COLON, :, 15] [FLOATKEYWORD, float, 15] [CLOSEDBRACKET, ), 15] [LAMDAEXPRESSION, =>, 15] [FLOATKEYWORD, float, 15]
[CURLYOPENBRACKET, {, 16]
[LOCALVARKEYWORD, localvar, 17] [ID, result, 17] [COLON, :, 17] [FLOATKEYWORD, float, 17] [SEMICOLON, ;, 17]
[ID, result, 18] [EQUAL, =, 18] [FLOAT, 0.0, 18] [SEMICOLON, ;, 18]
[ID, result, 19] [EQUAL, =, 19] [ID, a, 19] [MULTIPLY, *, 19] [ID, x, 19] [ADD, +, 19] [ID, b, 19] [SEMICOLON, ;, 19]
[WRITEKEYWORD, write, 20] [OPENBRACKET, (, 20] [ID, result, 20] [CLOSEDBRACKET, ), 20] [SEMICOLON, ;, 20] [INLINECOMMENT, //write, 20]
[READKEYWORD, read, 21] [OPENBRACKET, (, 21] [ID, result, 21] [CLOSEDBRACKET, ), 21] [SEMICOLON, ;, 21] [INLINECOMMENT, //read, 21]
[RETURNKEYWORD, return, 22] [OPENBRACKET, (, 22] [ID, result, 22] [CLOSEDBRACKET, ), 22] [SEMICOLON, ;, 22] [INLINECOMMENT, //return, 22]
[CURLYCLOSEDBRACKET, }, 23]
[FUNCTIONKEYWORD, function, 25] [ID, doo1, 25] [OPENBRACKET, (, 25] [ID, arr, 25] [COLON, :, 25] [INTEGERKEYWORD, integer, 25] [SQUAREOPENBRACKET, [, 25] [SQUARECLOSEDBRACKET, ], 25] [COMMA, ,, 25] [ID, size, 25] [COLON, :, 25] [INTEGERKEYWORD, integer, 25] [CLOSEDBRACKET, ), 25] [LAMDAEXPRESSION, =>, 25] [VOIDKEYWORD, void, 25]
[CURLYOPENBRACKET, {, 26]
[LOCALVARKEYWORD, localvar, 27] [ID, n, 27] [COLON, :, 27] [INTEGERKEYWORD, integer, 27] [SEMICOLON, ;, 27] [INLINECOMMENT, //int decl, 27]
[LOCALVARKEYWORD, localvar, 28] [ID, i, 28] [COLON, :, 28] [FLOATKEYWORD, float, 28] [SEMICOLON, ;, 28] [INLINECOMMENT, //float decl, 28]
[LOCALVARKEYWORD, localvar, 29] [ID, j, 29] [COLON, :, 29] [INTEGERKEYWORD, integer, 29] [SEMICOLON, ;, 29]
[LOCALVARKEYWORD, localvar, 30] [ID, temp, 30] [COLON, :, 30] [INTEGERKEYWORD, integer, 30] [SEMICOLON, ;, 30]
[LOCALVARKEYWORD, localvar, 31] [ID, SQUARE, 31] [COLON, :, 31] [ID, SQUARE, 31] [SEMICOLON, ;, 31] [INLINECOMMENT, //class var, 31]
[LOCALVARKEYWORD, localvar, 32] [ID, arr, 32] [COLON, :, 32] [ID, SQUARE, 32] [SQUAREOPENBRACKET, [, 32] [INTEGER, 8, 32] [SQUARECLOSEDBRACKET, ], 32] [SEMICOLON, ;, 32] [INLINECOMMENT, //class var arr, 32]
[ID, n, 34] [EQUAL, =, 34] [ID, size, 34] [SEMICOLON, ;, 34]
[ID, i, 35] [EQUAL, =, 35] [INTEGER, 0, 35] [SEMICOLON, ;, 35]
[ID, j, 36] [EQUAL, =, 36] [INTEGER, 0, 36] [SEMICOLON, ;, 36]
[ID, temp, 37] [EQUAL, =, 37] [INTEGER, 0, 37] [SEMICOLON, ;, 37]
[WHILEKEYWORD, while, 38] [OPENBRACKET, (, 38] [ID, i, 38] [LESSTHAN, <, 38] [ID, n, 38] [SUBTRACT, -, 38] [INTEGER, 1, 38] [CLOSEDBRACKET, ), 38] [CURLYOPENBRACKET, {, 38] [INLINECOMMENT, //loop, 38]
[WHILEKEYWORD, while, 39] [OPENBRACKET, (, 39] [ID, j, 39] [LESSTHAN, <, 39] [ID, n, 39] [SUBTRACT, -, 39] [ID, i, 39] [SUBTRACT, -, 39] [INTEGER, 1, 39] [MULTIPLY, *, 39] [INTEGER, 5, 39] [ADD, +, 39] [ID, n, 39] [CLOSEDBRACKET, ), 39] [CURLYOPENBRACKET, {, 39]
[IFKEYWORD, if, 40] [OPENBRACKET, (, 40] [ID, arr, 40] [SQUAREOPENBRACKET, [, 40] [ID, j, 40] [MULTIPLY, *, 40] [INTEGER, 1, 40] [SUBTRACT, -, 40] [INTEGER, 5, 40] [SQUARECLOSEDBRACKET, ], 40] [GREATERTHAN, >, 40] [ID, arr, 40] [SQUAREOPENBRACKET, [, 40] [ID, j, 40] [ADD, +, 40] [INTEGER, 1, 40] [DIVIDE, /, 40] [INTEGER, 5, 40] [SQUARECLOSEDBRACKET, ], 40] [CLOSEDBRACKET, ), 40] [INLINECOMMENT, //complex expr, 40]
[THENKEYWORD, then, 41] [CURLYOPENBRACKET, {, 41]
[CURLYCLOSEDBRACKET, }, 42] [ELSEKEYWORD, else, 42] [SEMICOLON, ;, 42]
[CURLYCLOSEDBRACKET, }, 43] [SEMICOLON, ;, 43]
[CURLYCLOSEDBRACKET, }, 44] [SEMICOLON, ;, 44]
[CURLYCLOSEDBRACKET, }, 45]
[FUNCTIONKEYWORD, function, 48] [ID, doo2, 48] [OPENBRACKET, (, 48] [CLOSEDBRACKET, ), 48] [LAMDAEXPRESSION, =>, 48] [INTEGERKEYWORD, integer, 48] [INLINECOMMENT, //free func, 48]
[CURLYOPENBRACKET, {, 49]
[LOCALVARKEYWORD, localvar, 50] [ID, n, 50] [COLON, :, 50] [INTEGERKEYWORD, integer, 50] [SEMICOLON, ;, 50]
[LOCALVARKEYWORD, localvar, 51] [ID, i, 51] [COLON, :, 51] [INTEGERKEYWORD, integer, 51] [SEMICOLON, ;, 51]
[ID, n, 52] [EQUAL, =, 52] [ID, size, 52] [SEMICOLON, ;, 52]
[ID, i, 53] [EQUAL, =, 53] [INTEGER, 0, 53] [SEMICOLON, ;, 53]
[WHILEKEYWORD, while, 54] [OPENBRACKET, (, 54] [ID, i, 54] [LESSTHAN, <, 54] [ID, n, 54] [CLOSEDBRACKET, ), 54] [CURLYOPENBRACKET, {, 54]
[WRITEKEYWORD, write, 55] [OPENBRACKET, (, 55] [ID, arr, 55] [SQUAREOPENBRACKET, [, 55] [ID, i, 55] [SQUARECLOSEDBRACKET, ], 55] [CLOSEDBRACKET, ), 55] [SEMICOLON, ;, 55]
[ID, i, 56] [EQUAL, =, 56] [ID, i, 56] [ADD, +, 56] [INTEGER, 1, 56] [SEMICOLON, ;, 56]
[CURLYCLOSEDBRACKET, }, 57] [SEMICOLON, ;, 57]
[CURLYCLOSEDBRACKET, }, 58]
[FUNCTIONKEYWORD, function, 62] [ID, add, 62] [OPENBRACKET, (, 62] [ID, one, 62] [COLON, :, 62] [INTEGERKEYWORD, integer, 62] [COMMA, ,, 62] [ID, two, 62] [COLON, :, 62] [INTEGERKEYWORD, integer, 62] [CLOSEDBRACKET, ), 62] [LAMDAEXPRESSION, =>, 62] [INTEGERKEYWORD, integer, 62] [CURLYOPENBRACKET, {, 62]
[LOCALVARKEYWORD, localvar, 63] [ID, result, 63] [COLON, :, 63] [INTEGERKEYWORD, integer, 63] [SEMICOLON, ;, 63]
[ID, result, 64] [EQUAL, =, 64] [ID, one, 64] [ADD, +, 64] [ID, two, 64] [SEMICOLON, ;, 64]
[RETURNKEYWORD, return, 65] [OPENBRACKET, (, 65] [ID, result, 65] [CLOSEDBRACKET, ), 65] [SEMICOLON, ;, 65]
[CURLYCLOSEDBRACKET, }, 66]
[INLINECOMMENT, // main func, 68]
[FUNCTIONKEYWORD, function, 69] [ID, main, 69] [OPENBRACKET, (, 69] [CLOSEDBRACKET, ), 69] [LAMDAEXPRESSION, =>, 69] [VOIDKEYWORD, void, 69] [INLINECOMMENT, //main func, 69]
[CURLYOPENBRACKET, {, 70]
[LOCALVARKEYWORD, localvar, 71] [ID, arr, 71] [COLON, :, 71] [INTEGERKEYWORD, integer, 71] [SQUAREOPENBRACKET, [, 71] [INTEGER, 7, 71] [SQUARECLOSEDBRACKET, ], 71] [SQUAREOPENBRACKET, [, 71] [INTEGER, 6, 71] [SQUARECLOSEDBRACKET, ], 71] [SEMICOLON, ;, 71]
[ID, arr, 72] [SQUAREOPENBRACKET, [, 72] [INTEGER, 0, 72] [SQUARECLOSEDBRACKET, ], 72] [SQUAREOPENBRACKET, [, 72] [INTEGER, 0, 72] [SQUARECLOSEDBRACKET, ], 72] [EQUAL, =, 72] [INTEGER, 64, 72] [SEMICOLON, ;, 72]
[LOCALVARKEYWORD, localvar, 73] [ID, one, 73] [COLON, :, 73] [INTEGERKEYWORD, integer, 73] [SEMICOLON, ;, 73]
[LOCALVARKEYWORD, localvar, 74] [ID, two, 74] [COLON, :, 74] [INTEGERKEYWORD, integer, 74] [SEMICOLON, ;, 74]
[ID, one, 75] [EQUAL, =, 75] [INTEGER, 1, 75] [SEMICOLON, ;, 75]
[ID, two, 76] [EQUAL, =, 76] [INTEGER, 2, 76] [SEMICOLON, ;, 76]
[ID, f1, 78] [PERIOD, ., 78] [ID, add, 78] [OPENBRACKET, (, 78] [ID, one, 78] [COMMA, ,, 78] [ID, two, 78] [CLOSEDBRACKET, ), 78] [SEMICOLON, ;, 78] [INLINECOMMENT, //function statement, dot operator, 78]
[ID, one, 79] [EQUAL, =, 79] [ID, arr, 79] [SQUAREOPENBRACKET, [, 79] [INTEGER, 0, 79] [SQUARECLOSEDBRACKET, ], 79] [SQUAREOPENBRACKET, [, 79] [INTEGER, 0, 79] [SQUARECLOSEDBRACKET, ], 79] [SEMICOLON, ;, 79] [INLINECOMMENT, //arrays multi, 79]
[LOCALVARKEYWORD, localvar, 80] [ID, square, 80] [COLON, :, 80] [ID, SQUARE, 80] [SEMICOLON, ;, 80]
[LOCALVARKEYWORD, localvar, 81] [ID, hello, 81] [COLON, :, 81] [ID, id, 81] [SEMICOLON, ;, 81]
[ID, square, 82] [PERIOD, ., 82] [ID, a, 82] [PERIOD, ., 82] [ID, b, 82] [PERIOD, ., 82] [ID, c, 82] [EQUAL, =, 82] [ID, hello, 82] [SEMICOLON, ;, 82] [INLINECOMMENT, //dot, 82]
[CURLYCLOSEDBRACKET, }, 86]
[EOF, eof, 87]