[CLASSKEYWORD, class, 1] [ID, POLYNOMIAL, 1] [CURLYOPENBRACKET, {, 1]
[CURLYCLOSEDBRACKET, }, 2] [SEMICOLON, ;, 2]
[CLASSKEYWORD, class, 3] [ID, POLYNOMIAL, 3] [CURLYOPENBRACKET, {, 3]
[PUBLICKEYWORD, public, 4] [FUNCTIONKEYWORD, function, 4] [ID, over, 4] [COLON, :, 4] [OPENBRACKET, (, 4] [ID, l, 4] [COLON, :, 4] [INTEGERKEYWORD, integer, 4] [COMMA, ,, 4] [ID, v, 4] [COLON, :, 4] [ID, id, 4] [CLOSEDBRACKET, ), 4] [LAMDAEXPRESSION, =>, 4] [INTEGERKEYWORD, integer, 4] [SEMICOLON, ;, 4]
[CURLYCLOSEDBRACKET, }, 5] [SEMICOLON, ;, 5]
[CLASSKEYWORD, class, 6] [ID, LINEAR, 6] [ISAKEYWORD, isa, 6] [ID, POLYNOMIAL, 6] [CURLYOPENBRACKET, {, 6]
[PUBLICKEYWORD, public, 7] [FUNCTIONKEYWORD, function, 7] [ID, over, 7] [COLON, :, 7] [OPENBRACKET, (, 7] [ID, l, 7] [COLON, :, 7] [INTEGERKEYWORD, integer, 7] [COMMA, ,, 7] [ID, v, 7] [COLON, :, 7] [ID, id, 7] [CLOSEDBRACKET, ), 7] [LAMDAEXPRESSION, =>, 7] [INTEGERKEYWORD, integer, 7] [SEMICOLON, ;, 7]
[PUBLICKEYWORD, public, 8] [FUNCTIONKEYWORD, function, 8] [ID, over, 8] [COLON, :, 8] [OPENBRACKET, (, 8] [ID, l, 8] [COLON, :, 8] [INTEGERKEYWORD, integer, 8] [COMMA, ,, 8] [ID, p, 8] [COLON, :, 8] [FLOATKEYWORD, float, 8] [CLOSEDBRACKET, ), 8] [LAMDAEXPRESSION, =>, 8] [INTEGERKEYWORD, integer, 8] [SEMICOLON, ;, 8]
[CURLYCLOSEDBRACKET, }, 9] [SEMICOLON, ;, 9]
[CLASSKEYWORD, class, 10] [ID, QUADRATIC, 10] [ISAKEYWORD, isa, 10] [ID, POLYNOMIAL, 10] [CURLYOPENBRACKET, {, 10]
[PUBLICKEYWORD, public, 11] [FUNCTIONKEYWORD, function, 11] [ID, emptyMethod, 11] [COLON, :, 11] [OPENBRACKET, (, 11] [CLOSEDBRACKET, ), 11] [LAMDAEXPRESSION, =>, 11] [VOIDKEYWORD, void, 11] [SEMICOLON, ;, 11]
[CURLYCLOSEDBRACKET, }, 12] [SEMICOLON, ;, 12]
[FUNCTIONKEYWORD, function, 17] [ID, noMethod, 17] [OPENBRACKET, (, 17] [ID, arr, 17] [COLON, :, 17] [INTEGERKEYWORD, integer, 17] [SQUAREOPENBRACKET, [, 17] [SQUARECLOSEDBRACKET, ], 17] [COMMA, ,, 17] [ID, size, 17] [COLON, :, 17] [INTEGERKEYWORD, integer, 17] [CLOSEDBRACKET, ), 17] [LAMDAEXPRESSION, =>, 17] [VOIDKEYWORD, void, 17]
[CURLYOPENBRACKET, {, 18]
[LOCALVARKEYWORD, localvar, 19] [ID, n, 19] [COLON, :, 19] [INTEGERKEYWORD, integer, 19] [SEMICOLON, ;, 19]
[LOCALVARKEYWORD, localvar, 20] [ID, i, 20] [COLON, :, 20] [INTEGERKEYWORD, integer, 20] [SEMICOLON, ;, 20]
[LOCALVARKEYWORD, localvar, 21] [ID, p, 21] [COLON, :, 21] [INTEGERKEYWORD, integer, 21] [SEMICOLON, ;, 21]
[LOCALVARKEYWORD, localvar, 22] [ID, size, 22] [COLON, :, 22] [INTEGERKEYWORD, integer, 22] [SQUAREOPENBRACKET, [, 22] [INTEGER, 7, 22] [SQUARECLOSEDBRACKET, ], 22] [SEMICOLON, ;, 22]
[ID, p, 24] [EQUAL, =, 24] [ID, size, 24] [SQUAREOPENBRACKET, [, 24] [INTEGER, 5, 24] [SQUARECLOSEDBRACKET, ], 24] [SEMICOLON, ;, 24]
[ID, i, 25] [EQUAL, =, 25] [ID, size, 25] [SQUAREOPENBRACKET, [, 25] [ID, helloworld, 25] [SQUARECLOSEDBRACKET, ], 25] [SEMICOLON, ;, 25]
[ID, n, 27] [EQUAL, =, 27] [ID, size, 27] [SEMICOLON, ;, 27]
[ID, i, 28] [EQUAL, =, 28] [INTEGER, 0, 28] [SEMICOLON, ;, 28]
[WHILEKEYWORD, while, 29] [OPENBRACKET, (, 29] [ID, i, 29] [LESSTHAN, <, 29] [ID, n, 29] [CLOSEDBRACKET, ), 29] [CURLYOPENBRACKET, {, 29]
[WRITEKEYWORD, write, 30] [OPENBRACKET, (, 30] [ID, arr, 30] [SQUAREOPENBRACKET, [, 30] [ID, i, 30] [SQUARECLOSEDBRACKET, ], 30] [CLOSEDBRACKET, ), 30] [SEMICOLON, ;, 30]
[ID, i, 31] [EQUAL, =, 31] [ID, i, 31] [ADD, +, 31] [INTEGER, 1, 31] [SEMICOLON, ;, 31]
[CURLYCLOSEDBRACKET, }, 32] [SEMICOLON, ;, 32]
[CURLYCLOSEDBRACKET, }, 33]
[EOF, eof, 35]