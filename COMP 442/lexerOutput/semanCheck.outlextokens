[CLASSKEYWORD, class, 1] [ID, POLYNOMIAL, 1] [CURLYOPENBRACKET, {, 1]
[PUBLICKEYWORD, public, 2] [FUNCTIONKEYWORD, function, 2] [ID, overload, 2] [COLON, :, 2] [OPENBRACKET, (, 2] [ID, l, 2] [COLON, :, 2] [INTEGERKEYWORD, integer, 2] [COMMA, ,, 2] [ID, v, 2] [COLON, :, 2] [ID, id, 2] [CLOSEDBRACKET, ), 2] [LAMDAEXPRESSION, =>, 2] [INTEGERKEYWORD, integer, 2] [SEMICOLON, ;, 2]
[PUBLICKEYWORD, public, 3] [FUNCTIONKEYWORD, function, 3] [ID, overload, 3] [COLON, :, 3] [OPENBRACKET, (, 3] [ID, l, 3] [COLON, :, 3] [INTEGERKEYWORD, integer, 3] [CLOSEDBRACKET, ), 3] [LAMDAEXPRESSION, =>, 3] [INTEGERKEYWORD, integer, 3] [SEMICOLON, ;, 3]
[PUBLICKEYWORD, public, 5] [ATTRIBUTEKEYWORD, attribute, 5] [ID, eightThree, 5] [COLON, :, 5] [INTEGERKEYWORD, integer, 5] [SEMICOLON, ;, 5]
[PUBLICKEYWORD, public, 6] [ATTRIBUTEKEYWORD, attribute, 6] [ID, eightThree, 6] [COLON, :, 6] [INTEGERKEYWORD, integer, 6] [SEMICOLON, ;, 6]
[CURLYCLOSEDBRACKET, }, 7] [SEMICOLON, ;, 7]
[CLASSKEYWORD, class, 8] [ID, POLYNOMIAL, 8] [CURLYOPENBRACKET, {, 8]
[PUBLICKEYWORD, public, 9] [FUNCTIONKEYWORD, function, 9] [ID, overload, 9] [COLON, :, 9] [OPENBRACKET, (, 9] [ID, l, 9] [COLON, :, 9] [INTEGERKEYWORD, integer, 9] [COMMA, ,, 9] [ID, v, 9] [COLON, :, 9] [ID, id, 9] [CLOSEDBRACKET, ), 9] [LAMDAEXPRESSION, =>, 9] [INTEGERKEYWORD, integer, 9] [SEMICOLON, ;, 9]
[PUBLICKEYWORD, public, 10] [FUNCTIONKEYWORD, function, 10] [ID, overload, 10] [COLON, :, 10] [OPENBRACKET, (, 10] [ID, l, 10] [COLON, :, 10] [INTEGERKEYWORD, integer, 10] [CLOSEDBRACKET, ), 10] [LAMDAEXPRESSION, =>, 10] [INTEGERKEYWORD, integer, 10] [SEMICOLON, ;, 10]
[CURLYCLOSEDBRACKET, }, 11] [SEMICOLON, ;, 11]
[CLASSKEYWORD, class, 12] [ID, LINEAR, 12] [ISAKEYWORD, isa, 12] [ID, POLYNOMIAL, 12] [CURLYOPENBRACKET, {, 12]
[PUBLICKEYWORD, public, 13] [FUNCTIONKEYWORD, function, 13] [ID, overload, 13] [COLON, :, 13] [OPENBRACKET, (, 13] [ID, l, 13] [COLON, :, 13] [INTEGERKEYWORD, integer, 13] [COMMA, ,, 13] [ID, v, 13] [COLON, :, 13] [ID, id, 13] [CLOSEDBRACKET, ), 13] [LAMDAEXPRESSION, =>, 13] [INTEGERKEYWORD, integer, 13] [SEMICOLON, ;, 13]
[PUBLICKEYWORD, public, 14] [FUNCTIONKEYWORD, function, 14] [ID, overload, 14] [COLON, :, 14] [OPENBRACKET, (, 14] [ID, l, 14] [COLON, :, 14] [INTEGERKEYWORD, integer, 14] [CLOSEDBRACKET, ), 14] [LAMDAEXPRESSION, =>, 14] [INTEGERKEYWORD, integer, 14] [SEMICOLON, ;, 14]
[CURLYCLOSEDBRACKET, }, 15] [SEMICOLON, ;, 15]
[CLASSKEYWORD, class, 16] [ID, QUADRATIC, 16] [ISAKEYWORD, isa, 16] [ID, POLYNOMIAL, 16] [CURLYOPENBRACKET, {, 16]
[PUBLICKEYWORD, public, 17] [FUNCTIONKEYWORD, function, 17] [ID, emptyMethod, 17] [COLON, :, 17] [OPENBRACKET, (, 17] [CLOSEDBRACKET, ), 17] [LAMDAEXPRESSION, =>, 17] [VOIDKEYWORD, void, 17] [SEMICOLON, ;, 17]
[CURLYCLOSEDBRACKET, }, 18] [SEMICOLON, ;, 18]
[FUNCTIONKEYWORD, function, 23] [ID, noMethod, 23] [OPENBRACKET, (, 23] [ID, arr, 23] [COLON, :, 23] [INTEGERKEYWORD, integer, 23] [SQUAREOPENBRACKET, [, 23] [SQUARECLOSEDBRACKET, ], 23] [COMMA, ,, 23] [ID, size, 23] [COLON, :, 23] [INTEGERKEYWORD, integer, 23] [CLOSEDBRACKET, ), 23] [LAMDAEXPRESSION, =>, 23] [VOIDKEYWORD, void, 23]
[CURLYOPENBRACKET, {, 24]
[LOCALVARKEYWORD, localvar, 25] [ID, n, 25] [COLON, :, 25] [INTEGERKEYWORD, integer, 25] [SEMICOLON, ;, 25]
[LOCALVARKEYWORD, localvar, 26] [ID, i, 26] [COLON, :, 26] [INTEGERKEYWORD, integer, 26] [SEMICOLON, ;, 26]
[LOCALVARKEYWORD, localvar, 27] [ID, p, 27] [COLON, :, 27] [INTEGERKEYWORD, integer, 27] [SEMICOLON, ;, 27]
[LOCALVARKEYWORD, localvar, 28] [ID, size, 28] [COLON, :, 28] [INTEGERKEYWORD, integer, 28] [SQUAREOPENBRACKET, [, 28] [INTEGER, 7, 28] [SQUARECLOSEDBRACKET, ], 28] [SEMICOLON, ;, 28]
[ID, p, 30] [EQUAL, =, 30] [ID, size, 30] [SQUAREOPENBRACKET, [, 30] [ID, f, 30] [SQUARECLOSEDBRACKET, ], 30] [SEMICOLON, ;, 30]
[ID, i, 31] [EQUAL, =, 31] [ID, size, 31] [SQUAREOPENBRACKET, [, 31] [ID, helloworld, 31] [SQUARECLOSEDBRACKET, ], 31] [SEMICOLON, ;, 31]
[ID, n, 33] [EQUAL, =, 33] [ID, size, 33] [SEMICOLON, ;, 33]
[ID, i, 34] [EQUAL, =, 34] [INTEGER, 0, 34] [SEMICOLON, ;, 34]
[WHILEKEYWORD, while, 35] [OPENBRACKET, (, 35] [ID, i, 35] [LESSTHAN, <, 35] [ID, n, 35] [CLOSEDBRACKET, ), 35] [CURLYOPENBRACKET, {, 35]
[WRITEKEYWORD, write, 36] [OPENBRACKET, (, 36] [ID, arr, 36] [SQUAREOPENBRACKET, [, 36] [ID, i, 36] [SQUARECLOSEDBRACKET, ], 36] [CLOSEDBRACKET, ), 36] [SEMICOLON, ;, 36]
[ID, i, 37] [EQUAL, =, 37] [ID, i, 37] [ADD, +, 37] [INTEGER, 1, 37] [SEMICOLON, ;, 37]
[CURLYCLOSEDBRACKET, }, 38] [SEMICOLON, ;, 38]
[CURLYCLOSEDBRACKET, }, 39]
[FUNCTIONKEYWORD, function, 44] [ID, duplicateMe, 44] [OPENBRACKET, (, 44] [ID, l, 44] [COLON, :, 44] [INTEGERKEYWORD, integer, 44] [COMMA, ,, 44] [ID, v, 44] [COLON, :, 44] [ID, id, 44] [CLOSEDBRACKET, ), 44] [LAMDAEXPRESSION, =>, 44] [INTEGERKEYWORD, integer, 44]
[CURLYOPENBRACKET, {, 45]
[LOCALVARKEYWORD, localvar, 46] [ID, arrDupe, 46] [COLON, :, 46] [INTEGERKEYWORD, integer, 46] [SQUAREOPENBRACKET, [, 46] [INTEGER, 7, 46] [SQUARECLOSEDBRACKET, ], 46] [SEMICOLON, ;, 46]
[LOCALVARKEYWORD, localvar, 47] [ID, arrDupe, 47] [COLON, :, 47] [INTEGERKEYWORD, integer, 47] [SQUAREOPENBRACKET, [, 47] [INTEGER, 6, 47] [SQUARECLOSEDBRACKET, ], 47] [SEMICOLON, ;, 47]
[CURLYCLOSEDBRACKET, }, 49]
[FUNCTIONKEYWORD, function, 51] [ID, duplicateMe, 51] [OPENBRACKET, (, 51] [ID, l, 51] [COLON, :, 51] [INTEGERKEYWORD, integer, 51] [COMMA, ,, 51] [ID, v, 51] [COLON, :, 51] [ID, id, 51] [CLOSEDBRACKET, ), 51] [LAMDAEXPRESSION, =>, 51] [INTEGERKEYWORD, integer, 51]
[CURLYOPENBRACKET, {, 52]
[LOCALVARKEYWORD, localvar, 53] [ID, dupeA, 53] [COLON, :, 53] [ID, a, 53] [SEMICOLON, ;, 53]
[LOCALVARKEYWORD, localvar, 54] [ID, dupeA, 54] [COLON, :, 54] [ID, a, 54] [SEMICOLON, ;, 54]
[LOCALVARKEYWORD, localvar, 55] [ID, b, 55] [COLON, :, 55] [ID, undeclaredBclass, 55] [SEMICOLON, ;, 55]
[CURLYCLOSEDBRACKET, }, 56]
[FUNCTIONKEYWORD, function, 57] [ID, duplicateMe, 57] [OPENBRACKET, (, 57] [ID, l, 57] [COLON, :, 57] [INTEGERKEYWORD, integer, 57] [CLOSEDBRACKET, ), 57] [LAMDAEXPRESSION, =>, 57] [INTEGERKEYWORD, integer, 57]
[CURLYOPENBRACKET, {, 58]
[CURLYCLOSEDBRACKET, }, 59]
[FUNCTIONKEYWORD, function, 61] [ID, main, 61] [OPENBRACKET, (, 61] [CLOSEDBRACKET, ), 61] [LAMDAEXPRESSION, =>, 61] [VOIDKEYWORD, void, 61]
[CURLYOPENBRACKET, {, 62]
[LOCALVARKEYWORD, localvar, 63] [ID, arr, 63] [COLON, :, 63] [INTEGERKEYWORD, integer, 63] [SQUAREOPENBRACKET, [, 63] [INTEGER, 6, 63] [SQUARECLOSEDBRACKET, ], 63] [SEMICOLON, ;, 63]
[CURLYCLOSEDBRACKET, }, 65]
[FUNCTIONKEYWORD, function, 66] [ID, main, 66] [OPENBRACKET, (, 66] [CLOSEDBRACKET, ), 66] [LAMDAEXPRESSION, =>, 66] [VOIDKEYWORD, void, 66]
[CURLYOPENBRACKET, {, 67]
[LOCALVARKEYWORD, localvar, 68] [ID, arr, 68] [COLON, :, 68] [INTEGERKEYWORD, integer, 68] [SQUAREOPENBRACKET, [, 68] [INTEGER, 10, 68] [SQUARECLOSEDBRACKET, ], 68] [SEMICOLON, ;, 68]
[CURLYCLOSEDBRACKET, }, 70] [EOF, eof, 70]